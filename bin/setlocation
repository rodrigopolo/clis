#!/usr/bin/env bash

#
# Set the lat, lon of an image file with exiftool
# Copyright (c) 2025 Rodrigo Polo - rodrigopolo.com - The MIT License (MIT)
#

# Modifying the internal field separator
IFS=$'\t\n'

# Check if the correct number of arguments are provided
if [ "$#" -lt 3 ]; then
	echo "Usage: $(basename "$0") <latitude> <longitude> <filename1> [<filename2> ...]"
	exit 1
fi

# Assign arguments to variables and remove commas
latitude=$(echo "$1" | tr -d ',')
longitude=$(echo "$2" | tr -d ',')
shift 2  # Remove the first two arguments from the list

# Convert latitude and longitude to degrees, minutes, and seconds format
lat_deg=$(echo "$latitude" | cut -d '.' -f 1)
lat_min=$(echo "scale=6; (${latitude} - ${lat_deg}) * 60" | bc | cut -d '.' -f 1)
lat_sec=$(echo "scale=6; (${latitude} - ${lat_min}/60 - ${lat_deg}) * 3600" | bc | cut -d '.' -f 1)

long_deg=$(echo "$longitude" | cut -d '.' -f 1)
long_min=$(echo "scale=6; (${longitude} - ${long_deg}) * 60" | bc | cut -d '.' -f 1)
long_sec=$(echo "scale=6; (${longitude} - ${long_min}/60 - ${long_deg}) * 3600" | bc | cut -d '.' -f 1)

# Set the appropriate reference directions
if (( $(echo "$latitude >= 0" | bc -l) )); then
	lat_ref="North"
else
	lat_ref="South"
fi

if (( $(echo "$longitude >= 0" | bc -l) )); then
	long_ref="East"
else
	long_ref="West"
fi

# Loop through all filenames
for filename in "$@"; do
	# Use ExifTool to set GPS coordinates
	exiftool -overwrite_original \
		-GPSLatitude="$lat_deg $lat_min $lat_sec" -GPSLatitudeRef="$lat_ref" \
		-GPSLongitude="$long_deg $long_min $long_sec" -GPSLongitudeRef="$long_ref" "$filename"

	echo "GPS coordinates set for $filename"
done